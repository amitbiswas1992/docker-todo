name: Deploy to AWS EC2

on:
  push:
    branches:
      - master  # Trigger deployment when changes are pushed to the 'master' branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the latest code from GitHub
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up SSH access for deployment
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "StrictHostKeyChecking no" >> ~/.ssh/config

      # Step 3: Deploy and manage code on EC2
      - name: Deploy to EC2
        run: |
          ssh ubuntu@54.227.208.98 << 'EOF'
            set -e  # Exit if any command fails
            echo "Starting deployment process..."

            # Update or clone the repository
            if [ ! -d "/home/ubuntu/docker-todo" ]; then
              echo "Cloning repository..."
              git clone git@github.com:amitbiswas1992/docker-todo.git /home/ubuntu/docker-todo
            else
              echo "Pulling latest changes..."
              cd /home/ubuntu/docker-todo
              git pull origin master
            fi

            # Ensure Docker permissions are correct (optional)
            echo "Setting Docker permissions..."
            sudo chmod 666 /var/run/docker.sock || true

            # Build the Docker image
            echo "Building Docker image..."
            cd /home/ubuntu/docker-todo
            sudo docker build -t todo-list-app .

            # Stop and remove the old container if it exists
            echo "Stopping old container if running..."
            sudo docker stop todo-list-app || true
            echo "Removing old container if exists..."
            sudo docker rm todo-list-app || true

            # Run the new container
            echo "Running the new Docker container..."
            sudo docker run -d -p 80:3000 --name todo-list-app todo-list-app

            # Clean up unused Docker images to save space
            echo "Cleaning up unused Docker images..."
            sudo docker image prune -a -f || true

            echo "Deployment completed successfully."
          EOF
